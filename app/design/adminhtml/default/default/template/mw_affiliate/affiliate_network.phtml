<?php $network = Mage::registry ('_network_'); ?>
<?php $code = Mage::registry ('_code_'); ?>
<?php $superarray= array()?>
<?php $twolevels= array()?>
<?php foreach ($network as $_affiliate): ?>
    <?php if (($code == $_affiliate['sponsor']) || (($code == $_affiliate['id']))): ?>
        <?php $tmp = $_affiliate ?>
        <?php if (!($code == $_affiliate['id'])): ?>        
            <?php $tmp['parent'] = $code ?>
            <?php $tmp['sponsor'] = $code ?>
        <?php endif; ?>
        <?php array_push($twolevels, $tmp) ?>
    <?php endif;?>
<?php endforeach; ?>

<?php $items= json_encode($network); ?>
<?php $levels = json_encode($twolevels); ?>

<div class="content-header">
    <table cellspacing="0">
        <tbody>
            <tr>
                <td style="width:50%;"><h3 class="icon-head head-adminhtml-affiliatenetwork"><?php echo $this->__('Affiliate Network')?></h3></td>
                <td class="form-buttons">
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    <div id="cache_grid">
        <div id="cache_grid_massaction">
            <table cellspacing="0" cellpadding="0" class="massaction">
                <tbody>
                    <tr>
                        <td>      
                            <form action="<?php echo Mage::helper("adminhtml")->getUrl('*/*/*'); ?>" method="post">
                                <input type="hidden" name="form_key" value="<?php echo Mage::getSingleton('core/session')->getFormKey(); ?>" />
                                <label><?php echo $this->__('Sponsor Email')?>: </label>
                                <input type="text" name="email" class="form-control" value="<?php echo $this->getRequest()->getPost('email')?>">
                                <button class="scalable " type="submit"><span><span><span>Enviar</span></span></span></button>
                            </form>
                        </td>
                        <td style="text-align: right;">
                            <input type="checkbox" name="fit" value="1" checked>Vista de Ã¡rbol
                            <input type="checkbox" name="sponsored" value="1">Linea Directa <br>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="grid">
            <div class="hor-scroll">
                <table cellspacing="0" id="cache_grid_table" class="data">                
                    <tbody>
                        <tr class="even">
                            <td>     
                                <?php if (!($network)):?>
                                <div style="text-align: center;"><?php echo $this->__("There's no network, please remember that you need to write the full email.")?></div>
                                <?php else: ?>
                                    <div id="basicdiagram" style="width: auto; height: 480px; border-width: 1px;"></div>
                                <?php endif;?>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    .stat > span{ color: #fff; text-align: center; display: block;  font: 14px Arial,Helvetica,sans-serif; height: 16px; margin: 1px 0; }
    .stat-active { background-color: #166700;}
    .stat-inactive { background-color: #ff0000;}
    .stat-preferente { background-color: #FFFF33; color: #000 !important;}
    .stat-promo { background-color: #4F2F4F;}
    .stat-deactivate { background-color: #eee; color: #000 !important; }
</style>

<script src="<?php echo $this->getSkinUrl('js/primitives.min.js');?>" ></script>
<script>
    var items = <?php echo $items ?>;
    var twolevels = <?php echo $levels ?>;
    var options = new primitives.orgdiagram.Config(); 
    
    jQuery.noConflict();
    jQuery( document ).ready(function( $ ) { 
        options.items = items;
        options.cursorItem = 0;
        options.templates = [getContactTemplate()];
        options.defaultTemplateName = "contactTemplate";
        options.onItemRender = onTemplateRender;
        options.hasButtons = primitives.common.Enabled.True;
        options.hasSelectorCheckbox = primitives.common.Enabled.False;
        options.onButtonClick = function (e, data) {
            var message = "User clicked '" + data.name + "' button for item '" + data.context.title + "'.";
            alert(message);
        };

        $('#basicdiagram').orgDiagram(options);
        $('#basicdiagram').orgDiagram("update",primitives.common.UpdateMode.Refresh);

        $('input[name="fit"]').change(function() {
            options.pageFitMode = $(this).is(':checked') ? 1 : 0;
            $('#basicdiagram').orgDiagram(options);
            $('#basicdiagram').orgDiagram("update", primitives.common.UpdateMode.Refresh);                    
        });

        $('input[name="sponsored"]').change(function() {
            options.items = $(this).is(':checked') ? twolevels : items;
            options.cursorItem = 0;
            options.templates = [getContactTemplate()];
            options.defaultTemplateName = "contactTemplate";
            options.onItemRender = onTemplateRender;
            options.hasButtons = primitives.common.Enabled.True;
            options.hasSelectorCheckbox = primitives.common.Enabled.False;
            options.onButtonClick = function (e, data) {
                var message = "User clicked '" + data.name + "' button for item '" + data.context.title + "'.";
                alert(message);
            };
        
            $('#basicdiagram').orgDiagram(options);
            $('#basicdiagram').orgDiagram("update", primitives.common.UpdateMode.Refresh);                    
        });
        
        function getContactTemplate() {
            var result = new primitives.orgdiagram.TemplateConfig();
            result.name = "contactTemplate";

            var buttons = [];
            buttons.push(new primitives.orgdiagram.ButtonConfig("revert", "ui-icon-transferthick-e-w", "Revert"));
            buttons.push(new primitives.orgdiagram.ButtonConfig("email", "ui-icon-mail-closed", "E-Mail"));
            buttons.push(new primitives.orgdiagram.ButtonConfig("help", "ui-icon-help", "Help"));

            result.buttons = buttons;

            result.itemSize = new primitives.common.Size(220, 150);
            result.minimizedItemSize = new primitives.common.Size(3, 3);
            result.highlightPadding = new primitives.common.Thickness(2, 2, 2, 2);


            var itemTemplate = jQuery(
              '<div class="bp-item bp-corner-all bt-item-frame">'
                + '<div name="titleBackground" class="bp-item bp-corner-all bp-title-frame" style="top: 2px; left: 2px; width: 216px; height: 20px;">'
                    + '<div name="title" class="bp-item bp-title" style="top: 3px; left: 6px; width: 208px; height: 18px;">'
                    + '</div>'
                + '</div>'
                + '<div class="bp-item bp-photo-frame" style="top: 26px; left: 164px; width: 50px; height: 60px;">'
                    + '<img name="photo" style="height:60px; width:50px;" />'
                + '</div>'
                + '<div name="rank" class="bp-item" style="top: 26px; left: 6px; width: 162px; height: 36px; font-size: 12px;"></div>'                    
                + '<div name="vp" class="bp-item" style="top: 64px; left: 6px; width: 162px; height: 18px; font-size: 10px;"></div>'
                + '<div name="vg" class="bp-item" style="top: 84px; left: 6px; width: 162px; height: 18px; font-size: 10px;"></div>'
                + '<div name="vgp" class="bp-item" style="top: 46px; left: 6px; width: 162px; height: 18px; font-size: 12px;"></div>'
                + '<div name="dreferral" class="bp-item" style="top: 106px; left: 6px; width: 162px; height: 18px; font-size: 10px;"></div>'
                + '<div name="dsponsor" class="bp-item" style="top: 128px; left: 6px; width: 162px; height: 18px; font-size: 10px;"></div>'
            + '</div>'
            ).css({
                width: result.itemSize.width + "px",
                height: result.itemSize.height + "px"
            }).addClass("bp-item bp-corner-all bt-item-frame");
            result.itemTemplate = itemTemplate.wrap('<div>').parent().html();

            return result;
        }

        function onTemplateRender(event, data) {
            switch (data.renderingMode) {
                case primitives.common.RenderingMode.Create:
                    /* Initialize widgets here */
                    break;
                case primitives.common.RenderingMode.Update:
                    /* Update widgets here */
                    break;
            }

            var itemConfig = data.context;

            data.element.find("[name=photo]").attr({ "src": itemConfig.image, "alt": itemConfig.title });
            data.element.find("[name=titleBackground]").css({ "background": itemConfig.itemTitleColor });

            var fields = ["title", "description", "rank", "vp", "dreferral", "dsponsor"];
            for (var index = 0; index < fields.length; index++) {
                var field = fields[index];

                var element = data.element.find("[name=" + field + "]");
                if (element.text() != itemConfig[field]) {
                    element.text(itemConfig[field]);
                }
            }

        }
    });    
</script>